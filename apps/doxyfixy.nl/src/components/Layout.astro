---
import BaseHead from './BaseHead.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

import NavBar from './NavBar.astro';
import Footer from '@doxyfixy/components/src/footer/Footer.svelte';

import { ViewTransitions } from 'astro:transitions';

const { title = '', logoColor = 'black' } = Astro.props;
const logoFillCSS = `--doxy-logo-fill: ${logoColor}`;

const pageTitle = title ? `${title} | ${SITE_TITLE}` : SITE_TITLE;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={pageTitle} description={SITE_DESCRIPTION} />
		<ViewTransitions />
	</head>
	<body>

		<div id="container" style={logoFillCSS}>

			<NavBar/>
			
			<slot name="header"/>

			<main>
				<slot/>
			</main>


			<Footer />

			<style>

				#container {
					display: flex;
					flex-direction: column;
					gap: calc( max(5vmin, 24px) );
					--doxy-logo-fill: {logoColor}
				}

				main {
					display: flex;
					flex-direction: column;
					width: 100%;
					max-width: 1280px;
					gap: var(--doxy-padding-xxxl);
					padding: 0 var(--doxy-padding-lg);
					margin: 0 auto;
				}

				@media screen and (max-width: 768px) {
					main {
						gap: var(--doxy-padding-xl);
					}
				}


				.doxy-header {
					position: absolute;
					/* z-index: 1; */
				}

			</style>

		</div>
		
	</body>
</html>

<script is:inline>


	//scroll
	document.addEventListener('scroll', () => {

		let scrollClass = '';
		const maxHeight = document.documentElement.scrollHeight - document.documentElement.clientHeight;
		const scrollFraction = document.documentElement.scrollTop / maxHeight;

		if(scrollFraction < 0.03) scrollClass = '';
		else if(scrollFraction >= 0.03 && scrollFraction < 0.95) scrollClass = '10';
		else if(scrollFraction >= 0.95 && scrollFraction < 1) scrollClass = '95';
		else scrollClass = '100';

		document.body.dataset.scrollFraction = scrollClass;

	}, {passive: true});


	//
	let observer = new IntersectionObserver((entries) => {
		entries[0].target.classList.toggle('intersecting', entries[0].intersectionRatio === 1);
	}, {
		root: null,
		rootMargin: "0px",
		threshold: '1.0'
	});
	document.querySelectorAll('p.p-large').forEach((elem) => observer.observe(elem));

</script>